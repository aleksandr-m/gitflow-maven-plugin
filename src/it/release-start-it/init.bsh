import org.codehaus.plexus.util.IOUtil;

try {
    new File(basedir, "gitignorefile").renameTo(new File(basedir, ".gitignore"));

    Process p = Runtime.getRuntime().exec("git --git-dir=" + basedir + "/.git --work-tree=" + basedir + " init");
    p.waitFor();

    System.out.println("1: " + IOUtil.toString(p.getInputStream()));
    System.out.println("1.err: " + IOUtil.toString(p.getErrorStream()));

    p = Runtime.getRuntime().exec("git --git-dir=" + basedir + "/.git --work-tree=" + basedir + " add .");
    p.waitFor();

    System.out.println("2: " + IOUtil.toString(p.getInputStream()));
    System.out.println("2.err: " + IOUtil.toString(p.getErrorStream()));

    p = Runtime.getRuntime().exec("git --git-dir=" + basedir + "/.git --work-tree=" + basedir + " commit -m init");
    p.waitFor();

    System.out.println("3: " + IOUtil.toString(p.getInputStream()));
    System.out.println("3.err: " + IOUtil.toString(p.getErrorStream()));

    p = Runtime.getRuntime().exec("git --git-dir=" + basedir + "/.git --work-tree=" + basedir + " checkout -b develop");
    p.waitFor();

    System.out.println("4: " + IOUtil.toString(p.getInputStream()));
    System.out.println("4.err: " + IOUtil.toString(p.getErrorStream()));

} catch (Exception e) {
    e.printStackTrace();
    return false;
}
return true;
